                                            In an numerical array form a biggest number 

public class function{
		public static void main (String[] args) {
		int input[]= {89,98,1};
		
		String m[]= new String[input.length];
		for(int i=0;i<=input.length-1;i++) {
			m[i]=String.valueOf(input[i]);
		}
		for(int i=0;i<=m.length-1;i++) {
			for(int j=i+1;j<=m.length-1;j++) {
                                     String order1=m[i]+m[j];
                                     String order2=m[j]+m[i];
			        	if(order1.compareTo(order2)<1) {
					String t=m[i];
					m[i]=m[j];
					m[j]=t;
				}
			 }
		}
		for(int i=0;i<=m.length-1;i++) {
			System.out.print(m[i]);
		}
	}
}

OUTPUT:
98891
--------------------------------------------------------------------------------------------------------------------------------------
                                                         Method 2
                                        In an given String array form a biggest number

public class function{
	public static void main (String[] args) {
			String input[]= {"21","77","7"};
			
			for(int i=0;i<=input.length-1;i++) {
				for(int j=i+1;j<=input.length-1;j++) {
                                        String order1=input[i]+input[j];
                                     String order2=input[j]+input[i];
					if(order1.compareTo(order2)<1) {
						String t=input[i];
						input[i]=input[j];
						input[j]=t;
					}
				 }
			}
			
			for(int i=0;i<=input.length-1;i++) {
				System.out.print(input[i]);
			}
	}
}
	

OUTPUT:
77721
